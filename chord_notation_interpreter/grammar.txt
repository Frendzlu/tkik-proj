start: measure* (measure_group+ measure*)+ | measure*

measure_group: preamble? LPAR (measure+ measure_group+ measure* | measure* measure_group+ measure+ | measure+) RPAR measure_suffix?

measure: preamble? PIPE subdiv? time_sgn? chords PIPE measure_suffix?

subdiv: p2_number
time_sgn: LT number COLON p2_number GT
preamble: AT number SEMI
measure_suffix: (jmp_sgn | group_repeat)+

jmp_sgn: AMP number SEMI

group_repeat: PERCENT number?

chords: (multi_chord)+

multi_chord: (chord | chord_over_chord | slash_chord | no_chord | PERCENT) duration
duration: time_extension? UNDERSCORE*

chord_over_chord: chord DASH chord

no_chord: NC

slash_chord: chord SLASH (root_note | modified_root_note)

time_extension: STAR number | STAR number SLASH number

chord: (modified_root_note (mode modifiers_no_base_size_comp | mode modifiers_base_size | mode? modifiers_add_plus))
	|   (root_note (mode modifiers_no_base_size_comp | mode? modifiers_base_size | mode? modifiers_add_plus))

modifiers_add_plus: additions? suspensions? reductions?
modifiers_no_base_size_comp: component_modifiers additions? suspensions? reductions?
modifiers_base_size: chord_base_size component_modifiers? additions? suspensions? reductions?

root_note: base_note
modified_root_note: base_note root_note_modifier

base_note: NOTES

root_note_modifier: FLAT | HASH

mode: MODE

chord_base_size: number  // restricted to: 7, 9, 11, 13 (enforce in code)

component_modifiers: (modifier component_number)+

modifier: FLAT | HASH

component_number: number  // restricted to: 5, 6, 7, 9, 11

additions: (ADD modifier? number)+

suspensions: SUS (/2/ | /4/)

reductions: (NO (/3/ | /5/))+

p2_number: number     // restrict values to powers of 2 (1â€“256) in code

number: NUMBER

NUMBER: /[1-9]//[0-9]/*
SLASH: "/"
DASH: "-"
STAR: "*"
AMP: "&"
PERCENT: "%"
HASH: "#"
FLAT: "b"
LT: "<"
GT: ">"
LPAR: "("
RPAR: ")"
PIPE: "|"
SEMI: ";"
AT: "@"
COLON: ":"
UNDERSCORE: "_"
NC: "N.C."
MODE: "maj" | "m" | "dim" | "aug"
ADD: "add"
NO: "no"
SUS: "sus"
NOTES: "A" | "B" | "C" | "D" | "E" | "F" | "G"


%import common.WS
%ignore WS
